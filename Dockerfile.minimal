# Ultra-minimal production dockerfile to get under 6GB
FROM node:20-alpine AS base

# Install only essential system dependencies
RUN apk add --no-cache dumb-init

FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies with aggressive optimizations
RUN npm ci --production --ignore-scripts --no-optional --no-audit --no-fund && \
    npm cache clean --force && \
    rm -rf ~/.npm && \
    find node_modules -name "*.md" -delete && \
    find node_modules -name "test" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find node_modules -name "tests" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find node_modules -name "*.map" -delete && \
    find node_modules -name "*.d.ts" -delete && \
    find node_modules -name "docs" -type d -exec rm -rf {} + 2>/dev/null || true

FROM base AS runner
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy production dependencies and app
COPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --chown=nextjs:nodejs . .

# Set production environment
ENV NODE_ENV=production
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1
ENV PUPPETEER_SKIP_DOWNLOAD=1

# Build client
RUN npm run build

USER nextjs

EXPOSE 5000

CMD ["dumb-init", "npm", "run", "start"]