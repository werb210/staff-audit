{
  "timestamp": "2025-07-13T17:58:55.300Z",
  "summary": {
    "total": 105,
    "critical": 0,
    "high": 0,
    "medium": 105
  },
  "vulnerabilities": [
    {
      "file": "./apps/staff-portal-archived/scripts/viewdocumentSmartFields.ts",
      "line": 11,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('🔑 Getting document access token...')",
      "context": "    10: async function getAccessToken() {\n>>> 11:   console.log('🔑 Getting document access token...');\n    12:   try {"
    },
    {
      "file": "./apps/staff-portal-archived/scripts/viewdocumentSmartFields.ts",
      "line": 21,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Access token obtained successfully')",
      "context": "    20:     \n>>> 21:     console.log('✅ Access token obtained successfully');\n    22:     return response.data.access_token;"
    },
    {
      "file": "./client_backup/src/components/ui/sidebar.tsx",
      "line": 663,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    662:   const width = React.useMemo(() => {\n>>> 663:     return `${Math.floor(Math.random() * 40) + 50}%`\n    664:   }, [])"
    },
    {
      "file": "./client_backup/src/contexts/AuthContext.tsx",
      "line": 50,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(\"AuthContext login called with:\", { token: newToken, user: newUser })",
      "context": "    49:   const login = (newToken: string | null, newUser: User) => {\n>>> 50:     console.log(\"AuthContext login called with:\", { token: newToken, user: newUser });\n    51:     setToken(newToken);"
    },
    {
      "file": "./client_backup/src/routes/Login.tsx",
      "line": 43,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(\"Admin bypass login - calling login with null token\")",
      "context": "    42:         // Handle admin bypass success (development mode)\n>>> 43:         console.log(\"Admin bypass login - calling login with null token\");\n    44:         login(null, response.user);"
    },
    {
      "file": "./comprehensive-document-workflow-test.js",
      "line": 105,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ Failed to get authentication token')",
      "context": "    104:   if (!token) {\n>>> 105:     console.log('❌ Failed to get authentication token');\n    106:     return;"
    },
    {
      "file": "./comprehensive-system-test.js",
      "line": 195,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('✅ SMS password reset system operational')",
      "context": "    194:       console.log('✅ JSON-only responses enforced');\n>>> 195:       console.log('✅ SMS password reset system operational');\n    196:       console.log('✅ Ready for production deployment');"
    },
    {
      "file": "./comprehensive-test-suite.js",
      "line": 95,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Invalid tokens properly rejected')",
      "context": "    94:     if (invalidToken.status === 401) {\n>>> 95:       console.log('✅ Invalid tokens properly rejected');\n    96:       testResults.passed++;"
    },
    {
      "file": "./comprehensive-test-suite.js",
      "line": 98,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ Invalid token handling failed')",
      "context": "    97:     } else {\n>>> 98:       console.log('❌ Invalid token handling failed');\n    99:       testResults.failed++;"
    },
    {
      "file": "./create-admin-user.js",
      "line": 21,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('Password: [ENVIRONMENT VARIABLE REQUIRED]')",
      "context": "    20:       console.log('Email: admin@boreal.com');\n>>> 21:       console.log('Password: [ENVIRONMENT VARIABLE REQUIRED]');\n    22:       return;"
    },
    {
      "file": "./create-admin-user.js",
      "line": 51,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('Password: [SECURE - SET VIA ENVIRONMENT]')",
      "context": "    50:     console.log('Email: admin@boreal.com');\n>>> 51:     console.log('Password: [SECURE - SET VIA ENVIRONMENT]');\n    52:     console.log('Role: admin');"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 47,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    46:         industry: company.industry,\n>>> 47:         yearEstablished: 2018 + Math.floor(Math.random() * 5),\n    48:         phone: `555-${String(Math.floor(Math.random() * 9000) + 1000)}`,"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 48,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    47:         yearEstablished: 2018 + Math.floor(Math.random() * 5),\n>>> 48:         phone: `555-${String(Math.floor(Math.random() * 9000) + 1000)}`,\n    49:         address: {"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 50,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    49:         address: {\n>>> 50:           street: `${Math.floor(Math.random() * 9999) + 1} Business St`,\n    51:           city: 'Sample City',"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 64,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    63:         timeInBusiness: '3 years',\n>>> 64:         creditScore: 650 + Math.floor(Math.random() * 150),\n    65:         bankBalance: String(company.amount / 2)"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 83,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    82:           email: `john@${company.name.toLowerCase().replace(/\\s+/g, '')}.com`,\n>>> 83:           phone: `555-${String(Math.floor(Math.random() * 9000) + 1000)}`,\n    84:           position: 'CEO',"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 87,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    86:           businessType: 'LLC',\n>>> 87:           yearsInBusiness: 3 + Math.floor(Math.random() * 5),\n    88:           monthlyRevenue: company.amount / 3"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 129,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    128:     averageBalance: company.amount / 2,\n>>> 129:     monthlyTransactions: 150 + Math.floor(Math.random() * 100),\n    130:     depositsPattern: 'Regular',"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 131,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    130:     depositsPattern: 'Regular',\n>>> 131:     overdrafts: Math.floor(Math.random() * 3),\n    132:     creditScore: 650 + Math.floor(Math.random() * 150),"
    },
    {
      "file": "./create-kanban-sample-data.js",
      "line": 132,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    131:     overdrafts: Math.floor(Math.random() * 3),\n>>> 132:     creditScore: 650 + Math.floor(Math.random() * 150),\n    133:     riskLevel: 'Medium'"
    },
    {
      "file": "./create-sample-applications.js",
      "line": 122,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    121:         yearEstablished: new Date().getFullYear() - Math.floor(app.timeInBusiness / 12),\n>>> 122:         numberOfEmployees: Math.floor(Math.random() * 50) + 5,\n    123:         annualRevenue: app.revenue,"
    },
    {
      "file": "./create-sample-applications.js",
      "line": 125,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    124:         businessStructure: 'LLC',\n>>> 125:         taxId: `${Math.floor(Math.random() * 900000000) + 100000000}`,\n    126:         businessAddress: '123 Business St',"
    },
    {
      "file": "./create-sample-applications.js",
      "line": 143,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    142:         status: 'draft',\n>>> 143:         submittedAt: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000), // Random date within last 30 days\n    144:         creditScore: app.creditScore,"
    },
    {
      "file": "./create-test-account.js",
      "line": 79,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(`   Password: ${testCredentials.password}`)",
      "context": "    78:   console.log(`   Email: ${testCredentials.email}`);\n>>> 79:   console.log(`   Password: ${testCredentials.password}`);\n    80:   console.log(`   Role: ${testCredentials.role}`);"
    },
    {
      "file": "./create-test-account.js",
      "line": 117,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(`3. Enter password: ${testCredentials.password}`)",
      "context": "    116:       console.log(`2. Enter email: ${testCredentials.email}`);\n>>> 117:       console.log(`3. Enter password: ${testCredentials.password}`);\n    118:       console.log('4. Click \"Sign in\"');"
    },
    {
      "file": "./create-test-account.js",
      "line": 128,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(`   Password: ${testCredentials.password}`)",
      "context": "    127:       console.log(`   Email: ${testCredentials.email}`);\n>>> 128:       console.log(`   Password: ${testCredentials.password}`);\n    129:       "
    },
    {
      "file": "./create-test-lender.js",
      "line": 29,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('   Password: lender123')",
      "context": "    28:       console.log('✅ Test lender already exists: lender@test.com');\n>>> 29:       console.log('   Password: lender123');\n    30:       console.log('   Role:', existingLender.role);"
    },
    {
      "file": "./create-test-lender.js",
      "line": 51,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('🔑 Password: lender123')",
      "context": "    50:     console.log('📧 Email: lender@test.com');\n>>> 51:     console.log('🔑 Password: lender123');\n    52:     console.log('👤 Role: lender');"
    },
    {
      "file": "./debug-document-invite-structure.js",
      "line": 22,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('📋 Step 1: Getting access token')",
      "context": "    21:     // Step 1: Get access token\n>>> 22:     console.log('📋 Step 1: Getting access token');\n    23:     const authResponse = await axios.post(`${document_BASE_URL}/oauth2/token`, {"
    },
    {
      "file": "./debug-document-invite-structure.js",
      "line": 35,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Step 1 Complete: Access token obtained')",
      "context": "    34:     const accessToken = authResponse.data.access_token;\n>>> 35:     console.log('✅ Step 1 Complete: Access token obtained');\n    36: "
    },
    {
      "file": "./e2e-test.js",
      "line": 50,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Token validation working')",
      "context": "    49:       if (meResult.status === 200) {\n>>> 50:         console.log('✅ Token validation working');\n    51:         testResults.passed++;"
    },
    {
      "file": "./e2e-test.js",
      "line": 53,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ Token validation failed')",
      "context": "    52:       } else {\n>>> 53:         console.log('❌ Token validation failed');\n    54:         testResults.failed++;"
    },
    {
      "file": "./final-system-report.js",
      "line": 43,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('   - JWT token generation active')",
      "context": "    42:     console.log('   - Admin login working');\n>>> 43:     console.log('   - JWT token generation active');\n    44:     console.log('   - Role-based access control enabled');"
    },
    {
      "file": "./fix-admin-otp.js",
      "line": 32,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('Password: admin123')",
      "context": "    31:     console.log('Email: admin@boreal.com');\n>>> 32:     console.log('Password: admin123');\n    33:     console.log('OTP verification: DISABLED for development');"
    },
    {
      "file": "./fix-admin-user.js",
      "line": 55,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('Password: admin123')",
      "context": "    54:     console.log('Email: admin@boreal.com');\n>>> 55:     console.log('Password: admin123');\n    56:     console.log('Phone: +1 587 888 1837');"
    },
    {
      "file": "./packages/backend/routes/applications.ts",
      "line": 34,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    33:   const newApplication = {\n>>> 34:     id: Math.random().toString(36).substr(2, 9),\n    35:     tenantId: req.tenantId,"
    },
    {
      "file": "./packages/backend/routes/auth.ts",
      "line": 117,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    116:   const newUser = {\n>>> 117:     id: Math.random().toString(36).substr(2, 9),\n    118:     email: userData.email,"
    },
    {
      "file": "./packages/backend/routes/contacts.ts",
      "line": 33,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    32:   const contact = {\n>>> 33:     id: Math.random().toString(36).substr(2, 9),\n    34:     tenantId: req.tenantId,"
    },
    {
      "file": "./packages/backend/routes/documents.ts",
      "line": 47,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    46:   const document = {\n>>> 47:     id: Math.random().toString(36).substr(2, 9),\n    48:     tenantId: req.tenantId,"
    },
    {
      "file": "./packages/backend/routes/products.ts",
      "line": 35,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    34:   const product = {\n>>> 35:     id: Math.random().toString(36).substr(2, 9),\n    36:     tenantId: req.tenantId,"
    },
    {
      "file": "./scripts/check-twilio-credentials.js",
      "line": 159,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('      - TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')",
      "context": "    158:     console.log('      - TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');\n>>> 159:     console.log('      - TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');\n    160:     console.log('      - TWILIO_VERIFY_SERVICE_SID=VAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');"
    },
    {
      "file": "./scripts/comprehensive-production-test.js",
      "line": 69,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('   ✅ Login successful - temp token generated')",
      "context": "    68:     if (loginResponse.status === 200 && loginResponse.data.success) {\n>>> 69:       console.log('   ✅ Login successful - temp token generated');\n    70:       console.log(`   📱 Masked phone: ${loginResponse.data.maskedPhone}`);"
    },
    {
      "file": "./scripts/create-lender-user.js",
      "line": 78,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(`🔑 Password: ${password}`)",
      "context": "    77:     console.log(`\\n✅ Created lender user: ${email}`);\n>>> 78:     console.log(`🔑 Password: ${password}`);\n    79:     console.log(`🏢 Company: ${companyName}`);"
    },
    {
      "file": "./scripts/create-lender-user.js",
      "line": 153,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(`   Password: ${password}`)",
      "context": "    152:     console.log(`   Email: ${email}`);\n>>> 153:     console.log(`   Password: ${password}`);\n    154:     console.log('3. You should see the products page with your lender-specific products');"
    },
    {
      "file": "./scripts/reset-todd-password.js",
      "line": 21,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('✅ Password reset successful for:', result.rows[0].email)",
      "context": "    20:     if (result.rows.length > 0) {\n>>> 21:       console.log('✅ Password reset successful for:', result.rows[0].email);\n    22:       console.log('📱 Phone number for 2FA:', result.rows[0].phone);"
    },
    {
      "file": "./scripts/reset-todd-password.js",
      "line": 23,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('🔑 New password: todd123')",
      "context": "    22:       console.log('📱 Phone number for 2FA:', result.rows[0].phone);\n>>> 23:       console.log('🔑 New password: todd123');\n    24:     } else {"
    },
    {
      "file": "./scripts/security-test-runner.js",
      "line": 115,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`✅ Malformed token rejected: ${token.split(' ')",
      "context": "    114:         if (response.status === 401 || response.status === 403) {\n>>> 115:           console.log(`✅ Malformed token rejected: ${token.split(' ')[1].substring(0, 20)}...`);\n    116:         } else {"
    },
    {
      "file": "./scripts/security-test-runner.js",
      "line": 117,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`❌ Malformed token accepted: ${token.split(' ')",
      "context": "    116:         } else {\n>>> 117:           console.log(`❌ Malformed token accepted: ${token.split(' ')[1].substring(0, 20)}...`);\n    118:         }"
    },
    {
      "file": "./scripts/security-test-runner.js",
      "line": 120,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`✅ Malformed token blocked: ${error.message}`)",
      "context": "    119:       } catch (error) {\n>>> 120:         console.log(`✅ Malformed token blocked: ${error.message}`);\n    121:       }"
    },
    {
      "file": "./scripts/test-2fa.js",
      "line": 20,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('📧 Step 1: Login with email/password...')",
      "context": "    19:     // Step 1: Attempt login with email/password\n>>> 20:     console.log('📧 Step 1: Login with email/password...');\n    21:     const loginResponse = await fetch(`${baseURL}/api/rbac/auth/login`, {"
    },
    {
      "file": "./scripts/test-2fa.js",
      "line": 41,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   Temp token received: ${loginData.tempToken ? 'Yes' : 'No'}\\n`)",
      "context": "    40:     console.log(`   Masked phone: ${loginData.maskedPhone}`);\n>>> 41:     console.log(`   Temp token received: ${loginData.tempToken ? 'Yes' : 'No'}\\n`);\n    42: "
    },
    {
      "file": "./scripts/test-2fa.js",
      "line": 95,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`  -d '{\"tempToken\":\"${loginData.tempToken}\",\"otpCode\":\"XXXXXX\"}'`)",
      "context": "    94:     console.log('  -H \"Content-Type: application/json\" \\\\');\n>>> 95:     console.log(`  -d '{\"tempToken\":\"${loginData.tempToken}\",\"otpCode\":\"XXXXXX\"}'`);\n    96:     console.log('\\n🎯 2FA Implementation Test Results:');"
    },
    {
      "file": "./scripts/test-2fa.js",
      "line": 99,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Temp token generation: PASSED')",
      "context": "    98:     console.log('✅ Development OTP sending: PASSED');\n>>> 99:     console.log('✅ Temp token generation: PASSED');\n    100:     console.log('✅ Valid OTP acceptance: PASSED');"
    },
    {
      "file": "./scripts/test-otp-fix.js",
      "line": 70,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   tempToken: ${response.data.tempToken ? 'Generated' : 'Missing'}`)",
      "context": "    69:         console.log(`   requiresOTP: ${response.data.requiresOTP}`);\n>>> 70:         console.log(`   tempToken: ${response.data.tempToken ? 'Generated' : 'Missing'}`);\n    71:         console.log(`   maskedPhone: ${response.data.maskedPhone}`);"
    },
    {
      "file": "./scripts/test-otp-fix.js",
      "line": 93,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   Full JWT: ${otpResponse.data.token ? 'Generated' : 'Missing'}`)",
      "context": "    92:             console.log('✅ OTP verification successful');\n>>> 93:             console.log(`   Full JWT: ${otpResponse.data.token ? 'Generated' : 'Missing'}`);\n    94:           } else {"
    },
    {
      "file": "./scripts/test-production-otp.js",
      "line": 81,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   Temp Token: ${response.data.tempToken ? 'Generated' : 'Missing'}`)",
      "context": "    80:         console.log('✅ OTP generation successful');\n>>> 81:         console.log(`   Temp Token: ${response.data.tempToken ? 'Generated' : 'Missing'}`);\n    82:         console.log(`   Masked Phone: ${response.data.maskedPhone || 'N/A'}`);"
    },
    {
      "file": "./scripts/test-document-workflow.js",
      "line": 164,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   Access Token: ${process.env.document_ACCESS_TOKEN ? 'Configured' : 'Missing'}`)",
      "context": "    163:     console.log(`   Template ID: ${templateId}`);\n>>> 164:     console.log(`   Access Token: ${process.env.document_ACCESS_TOKEN ? 'Configured' : 'Missing'}`);\n    165:     console.log('');"
    },
    {
      "file": "./scripts/verify-deployment.js",
      "line": 22,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('\\n2. JWT Token Generation:')",
      "context": "    21: // Test 2: JWT token generation\n>>> 22: console.log('\\n2. JWT Token Generation:');\n    23: try {"
    },
    {
      "file": "./scripts/verify-deployment.js",
      "line": 28,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('   ✅ JWT token generation and verification working')",
      "context": "    27:   const decoded = jwt.default.verify(token, jwtSecret);\n>>> 28:   console.log('   ✅ JWT token generation and verification working');\n    29: } catch (error) {"
    },
    {
      "file": "./server/auth-utils.ts",
      "line": 89,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    88:     const base = `${firstName}${lastName}`.toLowerCase().replace(/[^a-z0-9]/g, '');\n>>> 89:     const randomSuffix = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    90:     return `${base}${randomSuffix}`;"
    },
    {
      "file": "./server/auth.ts",
      "line": 110,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('Token verification failed, activating development admin bypass')",
      "context": "    109:     if (process.env.NODE_ENV === 'development') {\n>>> 110:       console.log('Token verification failed, activating development admin bypass');\n    111:       req.user = {"
    },
    {
      "file": "./server/communications-service.ts",
      "line": 127,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    126:       // For demo purposes, we'll simulate sending and store the message\n>>> 127:       const messageId = `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    128:       "
    },
    {
      "file": "./server/communications-service.ts",
      "line": 244,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    243:       // Generate a mock message SID for demo purposes\n>>> 244:       const messageSid = `SM${Date.now()}${Math.random().toString(36).substr(2, 9)}`;\n    245:       "
    },
    {
      "file": "./server/communications-service.ts",
      "line": 342,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    341:       // Generate a mock call SID for demo purposes\n>>> 342:       const callSid = `CA${Date.now()}${Math.random().toString(36).substr(2, 9)}`;\n    343:       "
    },
    {
      "file": "./server/communications-service.ts",
      "line": 457,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    456:       // Generate 6-digit OTP code\n>>> 457:       const code = Math.floor(100000 + Math.random() * 900000).toString();\n    458:       "
    },
    {
      "file": "./server/config.ts",
      "line": 15,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(\"DEBUG ENV VARS:\", {\n  CLIENT_APP_SHARED_TOKEN: process.env.CLIENT_APP_SHARED_TOKEN ? 'SET' : 'MISSING',\n  document_ACCESS_TOKEN: process.env.document_ACCESS_TOKEN ? 'SET' : 'MISSING',\n  document_API_TOKEN: process.env.document_API_TOKEN ? 'SET' : 'MISSING',\n  TEMPLATE_ID_PROD: process.env.TEMPLATE_ID_PROD ? 'SET' : 'MISSING',\n  NODE_ENV: process.env.NODE_ENV,\n  DATABASE_URL: process.env.DATABASE_URL ? 'SET' : 'MISSING'\n})",
      "context": "    14: // Debug environment variables - check all possible secret names\n>>> 15: console.log(\"DEBUG ENV VARS:\", {\n    16:   CLIENT_APP_SHARED_TOKEN: process.env.CLIENT_APP_SHARED_TOKEN ? 'SET' : 'MISSING',"
    },
    {
      "file": "./server/config.ts",
      "line": 43,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(\"CONFIG LOADED:\", {\n  CLIENT_TOKEN: CLIENT_APP_SHARED_TOKEN.substring(0, 8)",
      "context": "    42: \n>>> 43: console.log(\"CONFIG LOADED:\", {\n    44:   CLIENT_TOKEN: CLIENT_APP_SHARED_TOKEN.substring(0, 8) + '...',"
    },
    {
      "file": "./server/debug/verifydocumentTemplate.js",
      "line": 20,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('Access Token:', ACCESS_TOKEN ? ACCESS_TOKEN.slice(0, 8)",
      "context": "    19:   console.log('Template ID:', TEMPLATE_ID);\n>>> 20:   console.log('Access Token:', ACCESS_TOKEN ? ACCESS_TOKEN.slice(0, 8) + '...' : 'NOT SET');\n    21:   console.log('API Base URL:', document_BASE_URL);"
    },
    {
      "file": "./server/enhanced-twilio-service.ts",
      "line": 413,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    412:       let sentCount = 0;\n>>> 413:       const batchId = `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    414: "
    },
    {
      "file": "./server/enhanced-twilio-service.ts",
      "line": 779,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    778:         provider,\n>>> 779:         payload.id || `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n    780:         new Date(),"
    },
    {
      "file": "./server/enhanced-twilio-service.ts",
      "line": 1031,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    1030:       // Generate verification code\n>>> 1031:       const verificationCode = Math.floor(100000 + Math.random() * 900000).toString();\n    1032:       const expiresAt = new Date(Date.now() + 10 * 60 * 1000); // 10 minutes"
    },
    {
      "file": "./server/index.ts",
      "line": 854,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    853:     filename: (req, file, cb) => {\n>>> 854:       const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    855:       const sanitizedName = file.originalname.replace(/[^a-zA-Z0-9.-]/g, '_');"
    },
    {
      "file": "./server/index.ts",
      "line": 205,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log(\"🔍 Health endpoint query params:\", { auth, email: email ? 'provided' : 'missing', password: password ? '[REDACTED]' : 'missing' })",
      "context": "    204:     const { email, password, auth } = req.query;\n>>> 205:     console.log(\"🔍 Health endpoint query params:\", { auth, email: email ? 'provided' : 'missing', password: password ? '[REDACTED]' : 'missing' });\n    206:     "
    },
    {
      "file": "./server/middleware/bearerAuth.ts",
      "line": 19,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('Bearer auth failed:', {\n      received: token.substring(0, 8)",
      "context": "    18:   if (token !== CLIENT_APP_SHARED_TOKEN) {\n>>> 19:     console.log('Bearer auth failed:', {\n    20:       received: token.substring(0, 8) + '...',"
    },
    {
      "file": "./server/middleware/fileUploadSecurity.ts",
      "line": 91,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    90:     const timestamp = Date.now();\n>>> 91:     const randomSuffix = Math.round(Math.random() * 1E9);\n    92:     const sanitizedOriginalName = sanitizeFilename(file.originalname);"
    },
    {
      "file": "./server/queue/documentQueue.ts",
      "line": 41,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    40:   }): string {\n>>> 41:     const jobId = `document-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    42:     "
    },
    {
      "file": "./server/routes/applications/submit.ts",
      "line": 80,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    79:     const hour = String(now.getHours()).padStart(2, '0');\n>>> 80:     const randomSuffix = Math.floor(10000 + Math.random() * 90000);\n    81:     const reference = `BF${year}${month}${day}${hour}${randomSuffix}`;"
    },
    {
      "file": "./server/routes/applications/upload.ts",
      "line": 51,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    50:     filename: (req, file, cb) => {\n>>> 51:       const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    52:       const sanitizedName = file.originalname.replace(/[^a-zA-Z0-9.-]/g, '_');"
    },
    {
      "file": "./server/routes/applications/upload.ts",
      "line": 128,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    127:       // Create unique filename with UUID\n>>> 128:       const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    129:       const filename = `${uniqueSuffix}_${file.originalname}`;"
    },
    {
      "file": "./server/routes/auth.ts",
      "line": 42,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    41:   // Always generate random OTP for security\n>>> 42:   const otp = Math.floor(100000 + Math.random() * 900000).toString();\n    43:   "
    },
    {
      "file": "./server/routes/auth.ts",
      "line": 51,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    50:   // Production uses random secure OTP\n>>> 51:   return Math.floor(100000 + Math.random() * 900000).toString();\n    52: }"
    },
    {
      "file": "./server/routes/communications.ts",
      "line": 53,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    52:       accountId,\n>>> 53:       messageId: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n    54:       subject: subject || '(No Subject)',"
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 44,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('🔐 Testing OAuth token generation...')",
      "context": "    43:     // Test 1: OAuth Token Generation\n>>> 44:     console.log('🔐 Testing OAuth token generation...');\n    45:     "
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 75,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ OAuth token generation successful')",
      "context": "    74: \n>>> 75:         console.log('✅ OAuth token generation successful');\n    76:         "
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 79,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('🔍 Testing stored access token validation...')",
      "context": "    78:         if (document_ACCESS_TOKEN) {\n>>> 79:           console.log('🔍 Testing stored access token validation...');\n    80:           "
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 101,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('✅ Stored access token is valid')",
      "context": "    100: \n>>> 101:             console.log('✅ Stored access token is valid');\n    102:           } catch (tokenError: any) {"
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 110,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ Stored access token validation failed')",
      "context": "    109: \n>>> 110:             console.log('❌ Stored access token validation failed');\n    111:           }"
    },
    {
      "file": "./server/routes/debug/documentDiagnostic.ts",
      "line": 160,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ OAuth token generation failed')",
      "context": "    159: \n>>> 160:         console.log('❌ OAuth token generation failed');\n    161:       }"
    },
    {
      "file": "./server/routes/lenderProducts.ts",
      "line": 71,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    70:     // Generate unique product ID\n>>> 71:     const productId = `p-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    72: "
    },
    {
      "file": "./server/routes/marketing.ts",
      "line": 274,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    273:       title,\n>>> 274:       score: Math.floor(Math.random() * 30) + 70, // Mock score 70-100\n    275:       issuesFound: Math.floor(Math.random() * 10),"
    },
    {
      "file": "./server/routes/marketing.ts",
      "line": 275,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    274:       score: Math.floor(Math.random() * 30) + 70, // Mock score 70-100\n>>> 275:       issuesFound: Math.floor(Math.random() * 10),\n    276:       recommendations: ["
    },
    {
      "file": "./server/routes/publicApi.ts",
      "line": 66,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    65:       \n>>> 66:       const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    67:       const ext = path.extname(file.originalname).toLowerCase();"
    },
    {
      "file": "./server/routes/rbacAuth.ts",
      "line": 560,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    559:     const temporaryPassword = generatePassword ? \n>>> 560:       Math.random().toString(36).slice(-8) + Math.random().toString(36).slice(-8).toUpperCase() : \n    561:       'ChangeMe123!';"
    },
    {
      "file": "./server/routes/rbacAuth.ts",
      "line": 560,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    559:     const temporaryPassword = generatePassword ? \n>>> 560:       Math.random().toString(36).slice(-8) + Math.random().toString(36).slice(-8).toUpperCase() : \n    561:       'ChangeMe123!';"
    },
    {
      "file": "./server/routes/documentDebug.ts",
      "line": 33,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   Token: ${config.hasdocumentToken ? '✅' : '❌'}`)",
      "context": "    32:     console.log(`📊 document Configuration Score: ${configScore}/4`);\n>>> 33:     console.log(`   Token: ${config.hasdocumentToken ? '✅' : '❌'}`);\n    34:     console.log(`   Template: ${config.hasTemplateId ? '✅' : '❌'}`);"
    },
    {
      "file": "./server/routes/twilio/reminders.ts",
      "line": 33,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    32: \n>>> 33:     const reminderId = `reminder_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    34:     const scheduledDate = new Date(scheduledTime);"
    },
    {
      "file": "./server/routes.ts",
      "line": 390,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    389:     filename: (req, file, cb) => {\n>>> 390:       const uniqueName = `${Date.now()}-${Math.round(Math.random() * 1E9)}-${file.originalname}`;\n    391:       cb(null, uniqueName);"
    },
    {
      "file": "./server/routes.ts",
      "line": 645,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    644:           ...product,\n>>> 645:           score: Math.random() * 0.3 + 0.7 // 70-100% match\n    646:         }))"
    },
    {
      "file": "./server/documentService.ts",
      "line": 69,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('[document DEBUG] Using token: [REDACTED FOR SECURITY]')",
      "context": "    68:       console.log('[document DEBUG] Using template ID:', this.templateId);\n>>> 69:       console.log('[document DEBUG] Using token: [REDACTED FOR SECURITY]');\n    70:       console.log('[document DEBUG] document API base URL:', document_BASE_URL);"
    },
    {
      "file": "./server/twilioService.ts",
      "line": 30,
      "severity": "MEDIUM",
      "type": "Weak Random",
      "match": "Math.random()",
      "context": "    29: export const generateOTP = (): string => {\n>>> 30:   return Math.floor(100000 + Math.random() * 900000).toString();\n    31: };"
    },
    {
      "file": "./test-document-workflow.js",
      "line": 55,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   🔐 Auth: Bearer token provided`)",
      "context": "    54:         console.log(`   📡 Request: POST /api/applications/${testAppId}/nudge-documents`);\n>>> 55:         console.log(`   🔐 Auth: Bearer token provided`);\n    56:         console.log(`   📊 Status: ${response.status}`);"
    },
    {
      "file": "./test-individual-endpoints.js",
      "line": 57,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log(`   ❌ AUTH ISSUE: Valid token rejected`)",
      "context": "    56:     } else if (authResponse.status === 401) {\n>>> 57:       console.log(`   ❌ AUTH ISSUE: Valid token rejected`);\n    58:     }"
    },
    {
      "file": "./test-template-fields.js",
      "line": 13,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('1. 🔐 Getting OAuth token...')",
      "context": "    12:   // First, get OAuth token\n>>> 13:   console.log('1. 🔐 Getting OAuth token...');\n    14:   "
    },
    {
      "file": "./test-template-fields.js",
      "line": 45,
      "severity": "MEDIUM",
      "type": "Token Logging",
      "match": "console.log('❌ OAuth failed:', tokenData)",
      "context": "    44:     if (!tokenResponse.ok) {\n>>> 45:       console.log('❌ OAuth failed:', tokenData);\n    46:       return;"
    },
    {
      "file": "./verify-modular-auth.js",
      "line": 55,
      "severity": "MEDIUM",
      "type": "Password Logging",
      "match": "console.log('Password reset endpoint test:')",
      "context": "    54: \n>>> 55:     console.log('Password reset endpoint test:');\n    56:     console.log(`Status: ${result.status}`);"
    }
  ]
}