{
  "generatedAt": "2025-08-16T02:26:18.460Z",
  "counts": {
    "routers": 41,
    "direct": 60,
    "greedy": 2,
    "unmounted": 245,
    "endpoints": 172
  },
  "groups": [
    {
      "base": "/api/bootstrap",
      "file": "server/routes/bootstrap/seed.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/bootstrap/seed"
        },
        {
          "method": "GET",
          "path": "/api/bootstrap/X-Bootstrap-Token"
        }
      ]
    },
    {
      "base": "/api/auth",
      "file": "server/routes/auth/must_change.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/auth/must-change"
        }
      ]
    },
    {
      "base": "/api/auth",
      "file": "server/routes/auth/change_password.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/auth/change-password"
        }
      ]
    },
    {
      "base": "/api/auth",
      "file": "server/routes/auth/session.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/auth/login"
        },
        {
          "method": "GET",
          "path": "/api/auth/me"
        },
        {
          "method": "POST",
          "path": "/api/auth/logout"
        }
      ]
    },
    {
      "base": "/api/auth",
      "file": "server/routes/auth/password.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/auth/password/change"
        }
      ]
    },
    {
      "base": "/api/ops",
      "file": "server/routes/ops/errors.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/ops/errors/browser"
        }
      ]
    },
    {
      "base": "/api/admin",
      "file": "server/routes/admin/lists.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/admin/contacts"
        },
        {
          "method": "GET",
          "path": "/api/admin/applications"
        },
        {
          "method": "POST",
          "path": "/api/admin/applications/bulk/status"
        },
        {
          "method": "GET",
          "path": "/api/admin/search"
        }
      ]
    },
    {
      "base": "/api/apps",
      "file": "server/routes/apps.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/apps/"
        },
        {
          "method": "GET",
          "path": "/api/apps/:id"
        }
      ]
    },
    {
      "base": "/api/recs",
      "file": "server/routes/recs.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/recs/:appId"
        },
        {
          "method": "GET",
          "path": "/api/recs/:appId/pdf"
        }
      ]
    },
    {
      "base": "/api/pipeline",
      "file": "server/routes/pipeline.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/pipeline/board"
        },
        {
          "method": "GET",
          "path": "/api/pipeline/cards/:id"
        },
        {
          "method": "PATCH",
          "path": "/api/pipeline/cards/:id/move"
        },
        {
          "method": "GET",
          "path": "/api/pipeline/cards/:id/docs.zip"
        }
      ]
    },
    {
      "base": "/api",
      "file": "(mounted var: apiRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/",
      "file": "(mounted var: apiLimiter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api",
      "file": "(mounted var: documentRouteProtection — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/file-verification",
      "file": "(mounted var: fileVerificationRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/voice",
      "file": "server/routes/voice.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/voice/twiml/outbound"
        },
        {
          "method": "POST",
          "path": "/api/voice/events"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/client-outgoing"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/incoming"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/transfer"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/conference"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/voicemail"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/transfer"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/conference"
        },
        {
          "method": "POST",
          "path": "/api/voice/twiml/voicemail"
        }
      ]
    },
    {
      "base": "/api/voice",
      "file": "(mounted var: voiceAuthRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/voice/actions",
      "file": "(mounted var: voiceActionsRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/voice",
      "file": "(mounted var: voiceEventsRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/conference",
      "file": "server/routes/conference.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/conference/enter"
        },
        {
          "method": "POST",
          "path": "/api/conference/role"
        },
        {
          "method": "POST",
          "path": "/api/conference/start"
        },
        {
          "method": "POST",
          "path": "/api/conference/participants"
        },
        {
          "method": "POST",
          "path": "/api/conference/bridge"
        },
        {
          "method": "POST",
          "path": "/api/conference/status"
        },
        {
          "method": "POST",
          "path": "/api/conference/recording-status"
        }
      ]
    },
    {
      "base": "/api",
      "file": "server/routes/recording.webhooks.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/voice/recording-status"
        },
        {
          "method": "POST",
          "path": "/api/conference/recording-status"
        }
      ]
    },
    {
      "base": "/api",
      "file": "(mounted var: jwtOrSession — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/bulletproof-auth",
      "file": "server/routes/bulletproofAuth.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/bulletproof-auth/login"
        },
        {
          "method": "GET",
          "path": "/api/bulletproof-auth/me"
        },
        {
          "method": "GET",
          "path": "/api/bulletproof-auth/status"
        }
      ]
    },
    {
      "base": "/api/unified-auth",
      "file": "server/routes/unifiedAuth.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/unified-auth/me"
        },
        {
          "method": "GET",
          "path": "/api/unified-auth/status"
        },
        {
          "method": "GET",
          "path": "/api/unified-auth/debug"
        }
      ]
    },
    {
      "base": "/api/rbac/auth",
      "file": "server/routes/rbacAuth.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/rbac/auth/me"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/lender-login"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/lender-login"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/request-sms-otp"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/verify-otp"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/login"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/User-Agent"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/User-Agent"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/verify-otp"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/User-Agent"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/logout"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/User-Agent"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/me"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/register"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/users"
        },
        {
          "method": "PATCH",
          "path": "/api/rbac/auth/users/:id"
        },
        {
          "method": "DELETE",
          "path": "/api/rbac/auth/users/:id"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/verify-token"
        },
        {
          "method": "GET",
          "path": "/api/rbac/auth/test-debug"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/request-sms-otp"
        },
        {
          "method": "POST",
          "path": "/api/rbac/auth/verify-sms-otp"
        }
      ]
    },
    {
      "base": "/api/dev",
      "file": "(mounted var: dev — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/dev/iframe-auth",
      "file": "(mounted var: devIframeAuthRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/auth",
      "file": "(mounted var: emergencyAuthRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/standardized-auth",
      "file": "(mounted var: standardizedAuthRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/public/applications",
      "file": "(mounted var: signatureStatusRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/document-normalization",
      "file": "(mounted var: documentNormalizationRoutes — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/email",
      "file": "server/routes/email.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/email/"
        }
      ]
    },
    {
      "base": "/api/flags",
      "file": "server/routes/flags/admin.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/flags/flags"
        },
        {
          "method": "POST",
          "path": "/api/flags/flags"
        },
        {
          "method": "POST",
          "path": "/api/flags/flags/:key/override"
        },
        {
          "method": "GET",
          "path": "/api/flags/flags/:key/eval"
        },
        {
          "method": "GET",
          "path": "/api/flags/experiments"
        },
        {
          "method": "POST",
          "path": "/api/flags/experiments"
        },
        {
          "method": "POST",
          "path": "/api/flags/experiments/:key/status"
        },
        {
          "method": "GET",
          "path": "/api/flags/experiments/:key/assign"
        },
        {
          "method": "POST",
          "path": "/api/flags/experiments/:key/event"
        }
      ]
    },
    {
      "base": "/api/perf",
      "file": "server/routes/perf/vitals.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/perf/ingest"
        },
        {
          "method": "GET",
          "path": "/api/perf/latest"
        }
      ]
    },
    {
      "base": "/api/billing",
      "file": "(mounted var: billingRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/releases",
      "file": "server/routes/releases/admin.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/releases/"
        },
        {
          "method": "POST",
          "path": "/api/releases/"
        },
        {
          "method": "POST",
          "path": "/api/releases/:id/stage"
        },
        {
          "method": "POST",
          "path": "/api/releases/:id/live"
        },
        {
          "method": "POST",
          "path": "/api/releases/:id/archive"
        },
        {
          "method": "GET",
          "path": "/api/releases/:id/tasks"
        },
        {
          "method": "POST",
          "path": "/api/releases/:id/tasks"
        },
        {
          "method": "POST",
          "path": "/api/releases/tasks/:taskId/run"
        },
        {
          "method": "GET",
          "path": "/api/releases/whatsnew"
        },
        {
          "method": "POST",
          "path": "/api/releases/dismiss/:releaseId"
        },
        {
          "method": "GET",
          "path": "/api/releases/changelog"
        }
      ]
    },
    {
      "base": "/api/ops",
      "file": "server/routes/ops/queues.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/ops/queues/status"
        },
        {
          "method": "GET",
          "path": "/api/ops/queues/:name/jobs"
        },
        {
          "method": "POST",
          "path": "/api/ops/queues/:name/:jobId/retry"
        },
        {
          "method": "POST",
          "path": "/api/ops/queues/:name/:jobId/remove"
        },
        {
          "method": "POST",
          "path": "/api/ops/queues/:name/:jobId/promote"
        },
        {
          "method": "POST",
          "path": "/api/ops/queues/:name/retry-failed"
        },
        {
          "method": "POST",
          "path": "/api/ops/queues/:name/drain"
        }
      ]
    },
    {
      "base": "/auth",
      "file": "server/routes/auth/session.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/auth/login"
        },
        {
          "method": "GET",
          "path": "/auth/me"
        },
        {
          "method": "POST",
          "path": "/auth/logout"
        }
      ]
    },
    {
      "base": "/api/ops",
      "file": "server/routes/ops/overview.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/ops/overview"
        }
      ]
    },
    {
      "base": "/api/retention",
      "file": "(mounted var: retentionRouter — file not found)",
      "endpoints": []
    },
    {
      "base": "/api/security",
      "file": "server/routes/security/controls.ts",
      "endpoints": [
        {
          "method": "GET",
          "path": "/api/security/keys"
        },
        {
          "method": "POST",
          "path": "/api/security/keys"
        },
        {
          "method": "POST",
          "path": "/api/security/keys/:id/revoke"
        },
        {
          "method": "GET",
          "path": "/api/security/ping"
        },
        {
          "method": "GET",
          "path": "/api/security/ip-rules"
        },
        {
          "method": "POST",
          "path": "/api/security/ip-rules"
        },
        {
          "method": "DELETE",
          "path": "/api/security/ip-rules/:id"
        },
        {
          "method": "GET",
          "path": "/api/security/maintenance"
        },
        {
          "method": "POST",
          "path": "/api/security/maintenance"
        }
      ]
    },
    {
      "base": "/api/auth",
      "file": "server/routes/auth/password_login.ts",
      "endpoints": [
        {
          "method": "POST",
          "path": "/api/auth/login"
        },
        {
          "method": "POST",
          "path": "/api/auth/logout"
        }
      ]
    }
  ],
  "directs": [
    {
      "method": "GET",
      "path": "/api/health"
    },
    {
      "method": "GET",
      "path": "/api/auth/__probe"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders-fallback"
    },
    {
      "method": "GET",
      "path": "/api/_echo"
    },
    {
      "method": "GET",
      "path": "/api/clear-cookies"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders-cached"
    },
    {
      "method": "GET",
      "path": "/api/version"
    },
    {
      "method": "GET",
      "path": "/api/_health"
    },
    {
      "method": "GET",
      "path": "/api/_routes"
    },
    {
      "method": "GET",
      "path": "/api/health"
    },
    {
      "method": "POST",
      "path": "/api/chat/sessions"
    },
    {
      "method": "GET",
      "path": "/api/lender-auth-test"
    },
    {
      "method": "POST",
      "path": "/api/lender-auth"
    },
    {
      "method": "POST",
      "path": "/api/lender-login"
    },
    {
      "method": "POST",
      "path": "/api/bulletproof/upload/:applicationId"
    },
    {
      "method": "GET",
      "path": "/api/document-audit"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders"
    },
    {
      "method": "POST",
      "path": "/api/lender-products/sync-external"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-simple"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-real"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-real/counts"
    },
    {
      "method": "GET",
      "path": "/api/lender-directory"
    },
    {
      "method": "POST",
      "path": "/api/activate-admin"
    },
    {
      "method": "GET",
      "path": "/api/conflicts-direct/demo"
    },
    {
      "method": "POST",
      "path": "/api/auth/request-2fa"
    },
    {
      "method": "POST",
      "path": "/api/auth/verify-2fa"
    },
    {
      "method": "GET",
      "path": "/api/test-s3"
    },
    {
      "method": "GET",
      "path": "/api/bulletproof/health"
    },
    {
      "method": "POST",
      "path": "/api/admin/documents/reassign/:docId"
    },
    {
      "method": "POST",
      "path": "/api/chat/log-contact"
    },
    {
      "method": "POST",
      "path": "/api/chat/crm-create"
    },
    {
      "method": "GET",
      "path": "/api/public/upload-test"
    },
    {
      "method": "POST",
      "path": "/api/public/crm/contacts/auto-create"
    },
    {
      "method": "POST",
      "path": "/api/public/ai/report-issue"
    },
    {
      "method": "POST",
      "path": "/api/public/ai/request-human"
    },
    {
      "method": "PATCH",
      "path": "/api/public/application/:applicationId/finalize"
    },
    {
      "method": "PATCH",
      "path": "/api/public/applications/:id/finalize"
    },
    {
      "method": "GET",
      "path": "/api/public/download-all/:applicationId"
    },
    {
      "method": "GET",
      "path": "/api/contacts"
    },
    {
      "method": "POST",
      "path": "/api/public/s3-upload/:applicationId"
    },
    {
      "method": "GET",
      "path": "/api/public/s3-access/:documentId"
    },
    {
      "method": "GET",
      "path": "/api/public/s3-security-check"
    },
    {
      "method": "GET",
      "path": "/api/public/routes"
    },
    {
      "method": "GET",
      "path": "/api/public/upload-health"
    },
    {
      "method": "POST",
      "path": "/api/public/applications"
    },
    {
      "method": "POST",
      "path": "/api/public/applications/test-logging"
    },
    {
      "method": "GET",
      "path": "/api/s3-debug-direct"
    },
    {
      "method": "POST",
      "path": "/api/s3-upload-test"
    },
    {
      "method": "GET",
      "path": "/api/s3-test-access/:storageKey"
    },
    {
      "method": "GET",
      "path": "/api/applications"
    },
    {
      "method": "DELETE",
      "path": "/api/applications/:id"
    },
    {
      "method": "DELETE",
      "path": "/api/test/simple-delete"
    },
    {
      "method": "PATCH",
      "path": "/api/public/applications/:id/finalize"
    },
    {
      "method": "GET",
      "path": "/api/applications"
    },
    {
      "method": "GET",
      "path": "/api/applications/:id"
    },
    {
      "method": "GET",
      "path": "/api/test-s3-upload"
    },
    {
      "method": "GET",
      "path": "/api/system-validation/status"
    },
    {
      "method": "GET",
      "path": "/api/applications"
    },
    {
      "method": "GET",
      "path": "/api/lenders"
    },
    {
      "method": "GET",
      "path": "/api/changelog"
    }
  ],
  "endpoints": [
    {
      "method": "POST",
      "path": "/api/bootstrap/seed",
      "bucket": "Other",
      "source": "server/routes/bootstrap/seed.ts"
    },
    {
      "method": "GET",
      "path": "/api/bootstrap/X-Bootstrap-Token",
      "bucket": "Other",
      "source": "server/routes/bootstrap/seed.ts"
    },
    {
      "method": "GET",
      "path": "/api/auth/must-change",
      "bucket": "Other",
      "source": "server/routes/auth/must_change.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/change-password",
      "bucket": "Other",
      "source": "server/routes/auth/change_password.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/login",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "GET",
      "path": "/api/auth/me",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/logout",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/password/change",
      "bucket": "Other",
      "source": "server/routes/auth/password.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/errors/browser",
      "bucket": "Other",
      "source": "server/routes/ops/errors.ts"
    },
    {
      "method": "GET",
      "path": "/api/admin/contacts",
      "bucket": "Other",
      "source": "server/routes/admin/lists.ts"
    },
    {
      "method": "GET",
      "path": "/api/admin/applications",
      "bucket": "Other",
      "source": "server/routes/admin/lists.ts"
    },
    {
      "method": "POST",
      "path": "/api/admin/applications/bulk/status",
      "bucket": "Other",
      "source": "server/routes/admin/lists.ts"
    },
    {
      "method": "GET",
      "path": "/api/admin/search",
      "bucket": "Other",
      "source": "server/routes/admin/lists.ts"
    },
    {
      "method": "GET",
      "path": "/api/apps/",
      "bucket": "Other",
      "source": "server/routes/apps.ts"
    },
    {
      "method": "GET",
      "path": "/api/apps/:id",
      "bucket": "Other",
      "source": "server/routes/apps.ts"
    },
    {
      "method": "GET",
      "path": "/api/recs/:appId",
      "bucket": "Other",
      "source": "server/routes/recs.ts"
    },
    {
      "method": "GET",
      "path": "/api/recs/:appId/pdf",
      "bucket": "Other",
      "source": "server/routes/recs.ts"
    },
    {
      "method": "GET",
      "path": "/api/pipeline/board",
      "bucket": "Sales Pipeline",
      "source": "server/routes/pipeline.ts"
    },
    {
      "method": "GET",
      "path": "/api/pipeline/cards/:id",
      "bucket": "Sales Pipeline",
      "source": "server/routes/pipeline.ts"
    },
    {
      "method": "PATCH",
      "path": "/api/pipeline/cards/:id/move",
      "bucket": "Sales Pipeline",
      "source": "server/routes/pipeline.ts"
    },
    {
      "method": "GET",
      "path": "/api/pipeline/cards/:id/docs.zip",
      "bucket": "Sales Pipeline",
      "source": "server/routes/pipeline.ts"
    },
    {
      "method": "GET",
      "path": "/api/voice/twiml/outbound",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/events",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/client-outgoing",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/incoming",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/transfer",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/conference",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/voicemail",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/transfer",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/conference",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/twiml/voicemail",
      "bucket": "Communication Hub",
      "source": "server/routes/voice.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/enter",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/role",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/start",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/participants",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/bridge",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/status",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/recording-status",
      "bucket": "Other",
      "source": "server/routes/conference.ts"
    },
    {
      "method": "POST",
      "path": "/api/voice/recording-status",
      "bucket": "Communication Hub",
      "source": "server/routes/recording.webhooks.ts"
    },
    {
      "method": "POST",
      "path": "/api/conference/recording-status",
      "bucket": "Other",
      "source": "server/routes/recording.webhooks.ts"
    },
    {
      "method": "POST",
      "path": "/api/bulletproof-auth/login",
      "bucket": "Other",
      "source": "server/routes/bulletproofAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/bulletproof-auth/me",
      "bucket": "Other",
      "source": "server/routes/bulletproofAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/bulletproof-auth/status",
      "bucket": "Other",
      "source": "server/routes/bulletproofAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/unified-auth/me",
      "bucket": "Other",
      "source": "server/routes/unifiedAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/unified-auth/status",
      "bucket": "Other",
      "source": "server/routes/unifiedAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/unified-auth/debug",
      "bucket": "Other",
      "source": "server/routes/unifiedAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/me",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/lender-login",
      "bucket": "Lenders",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/lender-login",
      "bucket": "Lenders",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/request-sms-otp",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/verify-otp",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/login",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/User-Agent",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/User-Agent",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/verify-otp",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/User-Agent",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/logout",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/User-Agent",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/me",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/register",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/users",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "PATCH",
      "path": "/api/rbac/auth/users/:id",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "DELETE",
      "path": "/api/rbac/auth/users/:id",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/verify-token",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "GET",
      "path": "/api/rbac/auth/test-debug",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/request-sms-otp",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/rbac/auth/verify-sms-otp",
      "bucket": "Other",
      "source": "server/routes/rbacAuth.ts"
    },
    {
      "method": "POST",
      "path": "/api/email/",
      "bucket": "Other",
      "source": "server/routes/email.ts"
    },
    {
      "method": "GET",
      "path": "/api/flags/flags",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/flags/flags",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/flags/flags/:key/override",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/flags/flags/:key/eval",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/flags/experiments",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/flags/experiments",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/flags/experiments/:key/status",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/flags/experiments/:key/assign",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/flags/experiments/:key/event",
      "bucket": "Other",
      "source": "server/routes/flags/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/perf/ingest",
      "bucket": "Other",
      "source": "server/routes/perf/vitals.ts"
    },
    {
      "method": "GET",
      "path": "/api/perf/latest",
      "bucket": "Other",
      "source": "server/routes/perf/vitals.ts"
    },
    {
      "method": "GET",
      "path": "/api/releases/",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/:id/stage",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/:id/live",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/:id/archive",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/releases/:id/tasks",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/:id/tasks",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/tasks/:taskId/run",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/releases/whatsnew",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "POST",
      "path": "/api/releases/dismiss/:releaseId",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/releases/changelog",
      "bucket": "Other",
      "source": "server/routes/releases/admin.ts"
    },
    {
      "method": "GET",
      "path": "/api/ops/queues/status",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "GET",
      "path": "/api/ops/queues/:name/jobs",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/queues/:name/:jobId/retry",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/queues/:name/:jobId/remove",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/queues/:name/:jobId/promote",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/queues/:name/retry-failed",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/api/ops/queues/:name/drain",
      "bucket": "Other",
      "source": "server/routes/ops/queues.ts"
    },
    {
      "method": "POST",
      "path": "/auth/login",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "GET",
      "path": "/auth/me",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "POST",
      "path": "/auth/logout",
      "bucket": "Other",
      "source": "server/routes/auth/session.ts"
    },
    {
      "method": "GET",
      "path": "/api/ops/overview",
      "bucket": "Other",
      "source": "server/routes/ops/overview.ts"
    },
    {
      "method": "GET",
      "path": "/api/security/keys",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "POST",
      "path": "/api/security/keys",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "POST",
      "path": "/api/security/keys/:id/revoke",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "GET",
      "path": "/api/security/ping",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "GET",
      "path": "/api/security/ip-rules",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "POST",
      "path": "/api/security/ip-rules",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "DELETE",
      "path": "/api/security/ip-rules/:id",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "GET",
      "path": "/api/security/maintenance",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "POST",
      "path": "/api/security/maintenance",
      "bucket": "Other",
      "source": "server/routes/security/controls.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/login",
      "bucket": "Other",
      "source": "server/routes/auth/password_login.ts"
    },
    {
      "method": "POST",
      "path": "/api/auth/logout",
      "bucket": "Other",
      "source": "server/routes/auth/password_login.ts"
    },
    {
      "method": "GET",
      "path": "/api/health",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/auth/__probe",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders-fallback",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/_echo",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/clear-cookies",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders-cached",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/version",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/_health",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/_routes",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/health",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/chat/sessions",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lender-auth-test",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/lender-auth",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/lender-login",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/bulletproof/upload/:applicationId",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/document-audit",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/lenders",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/lender-products/sync-external",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-simple",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-real",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lender-products-real/counts",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lender-directory",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/activate-admin",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/conflicts-direct/demo",
      "bucket": "Conflicts",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/auth/request-2fa",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/auth/verify-2fa",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/test-s3",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/bulletproof/health",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/admin/documents/reassign/:docId",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/chat/log-contact",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/chat/crm-create",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/upload-test",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/crm/contacts/auto-create",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/ai/report-issue",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/ai/request-human",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "PATCH",
      "path": "/api/public/application/:applicationId/finalize",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "PATCH",
      "path": "/api/public/applications/:id/finalize",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/download-all/:applicationId",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/contacts",
      "bucket": "Contacts",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/s3-upload/:applicationId",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/s3-access/:documentId",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/s3-security-check",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/routes",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/public/upload-health",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/applications",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/public/applications/test-logging",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/s3-debug-direct",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "POST",
      "path": "/api/s3-upload-test",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/s3-test-access/:storageKey",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/applications",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "DELETE",
      "path": "/api/applications/:id",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "DELETE",
      "path": "/api/test/simple-delete",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "PATCH",
      "path": "/api/public/applications/:id/finalize",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/applications",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/applications/:id",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/test-s3-upload",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/system-validation/status",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/applications",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/lenders",
      "bucket": "Lenders",
      "source": "server/index.ts (direct)"
    },
    {
      "method": "GET",
      "path": "/api/changelog",
      "bucket": "Other",
      "source": "server/index.ts (direct)"
    }
  ],
  "greedy": [
    {
      "where": "server/index.ts",
      "lineHint": "*"
    },
    {
      "where": "server/routes/webauthn.ts",
      "lineHint": "*"
    }
  ],
  "unmounted": [
    "server/routes/_authUtils.ts",
    "server/routes/admin.disabled.ts",
    "server/routes/adminImpersonate.ts",
    "server/routes/adminLenderReports.ts",
    "server/routes/adminLenderUsers.ts",
    "server/routes/adminReassignment.ts",
    "server/routes/adminReportsPrefs.ts",
    "server/routes/adminUploadDashboard.ts",
    "server/routes/adminUploadLogs.ts",
    "server/routes/ai-reports-simple.ts",
    "server/routes/ai-reports.disabled.ts",
    "server/routes/ai-train.ts",
    "server/routes/ai.ts",
    "server/routes/aiTraining.ts",
    "server/routes/analytics-dashboard.ts",
    "server/routes/analytics.ts",
    "server/routes/appDetail.ts",
    "server/routes/applicationMetadata.ts",
    "server/routes/applicationReprocessing.ts",
    "server/routes/applications-board.ts",
    "server/routes/applications-enhanced.ts",
    "server/routes/applications-minimal.ts",
    "server/routes/applications-simple.ts",
    "server/routes/applications-super-minimal.ts",
    "server/routes/applications.ts",
    "server/routes/audit.ts",
    "server/routes/auditRoutes.ts",
    "server/routes/auth-verify.ts",
    "server/routes/auth.backup.ts",
    "server/routes/auth.old.ts",
    "server/routes/auth.ts",
    "server/routes/authFixed.disabled.disabled.ts",
    "server/routes/authMandatory2FA.disabled.ts",
    "server/routes/autoDocumentRoutes.ts",
    "server/routes/autoGeneratePDF.ts",
    "server/routes/autoRecovery.ts",
    "server/routes/autoRestore.ts",
    "server/routes/automationDemo.ts",
    "server/routes/awsCredentialCheck.ts",
    "server/routes/backup.ts",
    "server/routes/banking.ts",
    "server/routes/bankingAnalysis.ts",
    "server/routes/base64Upload.ts",
    "server/routes/bulletproof.ts",
    "server/routes/bulletproofHealth.ts",
    "server/routes/bulletproofHealthV2.ts",
    "server/routes/bulletproofUpload.ts",
    "server/routes/cache.ts",
    "server/routes/calendar-tasks-enhanced.ts",
    "server/routes/calendar-tasks-real.ts",
    "server/routes/campaigns.ts",
    "server/routes/canonicalAuth.ts",
    "server/routes/categories.ts",
    "server/routes/chat.ts",
    "server/routes/chatRoutes.ts",
    "server/routes/chatSessions.ts",
    "server/routes/comms.ts",
    "server/routes/communication-enhanced.ts",
    "server/routes/communication.ts",
    "server/routes/communicationCalls.ts",
    "server/routes/communicationCenter.ts",
    "server/routes/communicationEmail.ts",
    "server/routes/communications.ts",
    "server/routes/comprehensiveSmsOcrSystem.ts",
    "server/routes/conflicts.ts",
    "server/routes/contactImport.ts",
    "server/routes/contacts.ts",
    "server/routes/contactsCommunications.ts",
    "server/routes/contactsDedup.ts",
    "server/routes/contactsTaxonomy.ts",
    "server/routes/credentialDiagnostic.ts",
    "server/routes/crm-enhanced.ts",
    "server/routes/crm.ts",
    "server/routes/crmContactCard.ts",
    "server/routes/crmPublic.ts",
    "server/routes/dataIntegrity.ts",
    "server/routes/dbdebug.ts",
    "server/routes/debug.ts",
    "server/routes/debugHealth.ts",
    "server/routes/debugSMS.ts",
    "server/routes/dev-iframe-auth.ts",
    "server/routes/dev.ts",
    "server/routes/documentAnalytics.ts",
    "server/routes/documentAudit.ts",
    "server/routes/documentAuditApi.ts",
    "server/routes/documentAuditTrail.ts",
    "server/routes/documentBackupStatus.ts",
    "server/routes/documentCleanup.ts",
    "server/routes/documentDashboard.ts",
    "server/routes/documentManagement.ts",
    "server/routes/documentMetadata.ts",
    "server/routes/documentNormalization.ts",
    "server/routes/documentReassignment.ts",
    "server/routes/documentRecovery.ts",
    "server/routes/documentRecoveryUI.ts",
    "server/routes/documentReliabilityPhase3.ts",
    "server/routes/documentRepair.ts",
    "server/routes/documentReprocessing.ts",
    "server/routes/documentRestoration.ts",
    "server/routes/documentResync.ts",
    "server/routes/documentReupload.ts",
    "server/routes/documentUpload.ts",
    "server/routes/documentUploadFixed.ts",
    "server/routes/documentValidation.ts",
    "server/routes/documentVersioning.ts",
    "server/routes/documentWebhooks.ts",
    "server/routes/documentWorkflow.ts",
    "server/routes/documents-enhanced.ts",
    "server/routes/documents.ts",
    "server/routes/emailTemplates.ts",
    "server/routes/emailTracking.ts",
    "server/routes/emergencyAccess.ts",
    "server/routes/enhanced-twilio.ts",
    "server/routes/enhancedOcr.ts",
    "server/routes/enhancedSmsTemplates.ts",
    "server/routes/escalations-enhanced.ts",
    "server/routes/exports.ts",
    "server/routes/feedback.ts",
    "server/routes/fileVerification.ts",
    "server/routes/finalAudit.ts",
    "server/routes/fraud-detection.ts",
    "server/routes/healthCheck.ts",
    "server/routes/industry-benchmarking.ts",
    "server/routes/internalDocumentTypes.ts",
    "server/routes/lender-products-unified.ts",
    "server/routes/lender.ts",
    "server/routes/lender2FA.ts",
    "server/routes/lenderApps.ts",
    "server/routes/lenderAuth.ts",
    "server/routes/lenderCredentials.ts",
    "server/routes/lenderOutcomes.ts",
    "server/routes/lenderProducts.ts",
    "server/routes/lenderProductsHealth.ts",
    "server/routes/lenderReports.ts",
    "server/routes/lenderScoring.ts",
    "server/routes/lenders-unified.ts",
    "server/routes/lenders.ts",
    "server/routes/linkedin.ts",
    "server/routes/loan-products.ts",
    "server/routes/loanDecisions.ts",
    "server/routes/loanProducts.ts",
    "server/routes/marketing-abtests.ts",
    "server/routes/marketing-budgets.ts",
    "server/routes/marketing-campaigns.ts",
    "server/routes/marketing-enhanced.ts",
    "server/routes/marketing-reports.ts",
    "server/routes/marketing.ts",
    "server/routes/matchingEngine.ts",
    "server/routes/microsoftGraphContactCard.ts",
    "server/routes/missingDocsReminderRoutes.ts",
    "server/routes/monitoring.ts",
    "server/routes/notifications.ts",
    "server/routes/ocr.ts",
    "server/routes/ocrEnhanced.ts",
    "server/routes/ocrInsights.ts",
    "server/routes/ocrManualTrigger.ts",
    "server/routes/openapi.ts",
    "server/routes/otp.ts",
    "server/routes/otpDebug.ts",
    "server/routes/otp_diag.ts",
    "server/routes/otp_test_direct.ts",
    "server/routes/partnerReferral.ts",
    "server/routes/passwordRecovery.ts",
    "server/routes/pdfGeneration.ts",
    "server/routes/persistenceValidation.ts",
    "server/routes/pipelineAutomation.ts",
    "server/routes/pipelineBoard.ts",
    "server/routes/public.ts",
    "server/routes/publicApi.ts",
    "server/routes/publicApplicationDocuments.ts",
    "server/routes/publicApplications.ts",
    "server/routes/publicLenders.ts",
    "server/routes/push-multiplatform.ts",
    "server/routes/push.ts",
    "server/routes/quickS3Test.ts",
    "server/routes/rbac.ts",
    "server/routes/rbacLenderProducts.ts",
    "server/routes/rbacSimple.ts",
    "server/routes/rbacUsers.ts",
    "server/routes/reports-enhanced.ts",
    "server/routes/reports.ts",
    "server/routes/retryUploadHandler.ts",
    "server/routes/risk.ts",
    "server/routes/routing.ts",
    "server/routes/s3BucketTest.ts",
    "server/routes/s3Debug.ts",
    "server/routes/s3Diagnostics.ts",
    "server/routes/s3DocumentRoutes.ts",
    "server/routes/s3Integration.ts",
    "server/routes/s3Management.ts",
    "server/routes/s3ProductionTest.ts",
    "server/routes/s3Test.ts",
    "server/routes/s3TestRouter.ts",
    "server/routes/s3UploadRoutes.ts",
    "server/routes/securityHistory.ts",
    "server/routes/securityStatus.ts",
    "server/routes/segments.ts",
    "server/routes/settings-enhanced.ts",
    "server/routes/settings.ts",
    "server/routes/settingsUsers.ts",
    "server/routes/silos.ts",
    "server/routes/simple-users.ts",
    "server/routes/simpleDocumentRecovery.ts",
    "server/routes/slf.ts",
    "server/routes/smsStageNotifications.ts",
    "server/routes/smsTestEndpoint.ts",
    "server/routes/staff-verification.ts",
    "server/routes/staffLenderProducts.ts",
    "server/routes/standardLoginHandler.ts",
    "server/routes/standardizedAuth.ts",
    "server/routes/systemDiagnostics.ts",
    "server/routes/systemMaintenance.ts",
    "server/routes/systemValidation.ts",
    "server/routes/tasks.ts",
    "server/routes/templateSend.ts",
    "server/routes/templateTest.ts",
    "server/routes/templates.ts",
    "server/routes/tenantSwitch.ts",
    "server/routes/test-applications.ts",
    "server/routes/test-basic.js",
    "server/routes/testAcceptDocuments.ts",
    "server/routes/testCorrectBucket.ts",
    "server/routes/testNotification.ts",
    "server/routes/testRouter.ts",
    "server/routes/testS3DocumentAccess.ts",
    "server/routes/testWebhook.ts",
    "server/routes/transcripts.ts",
    "server/routes/twilio.disabled.ts",
    "server/routes/twilioCalls.ts",
    "server/routes/twilioContactCard.ts",
    "server/routes/twilioDebug.ts",
    "server/routes/twilioStatus.ts",
    "server/routes/twilioTesting.disabled.ts",
    "server/routes/unifiedComms.ts",
    "server/routes/upload.ts",
    "server/routes/uploadFreeze.ts",
    "server/routes/userManagement.ts",
    "server/routes/users.ts",
    "server/routes/voice-actions.ts",
    "server/routes/voice-auth.ts",
    "server/routes/voice-events.ts",
    "server/routes/voice-speak-code.ts",
    "server/routes/webauthn.ts",
    "server/routes/webhooks-enhanced.ts",
    "server/routes/webhooks-twilio-status.ts"
  ]
}