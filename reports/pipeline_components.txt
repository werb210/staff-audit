tests/artifacts/ui-buttons.csv:3:Pipeline,Drag Drop Cards,PASS,pipeline-card,Drag/Click,30 cards loaded across 6 stages
tests/artifacts/ui-buttons.csv:13:Pipeline,Move Between Stages,PASS,pipeline-move,Drag Drop,Cards move between stages
staff-api-fixes-summary.md:58:- **Pipeline Cards**: `GET /api/pipeline/cards` 🔧
tests/staff-comprehensive.spec.ts:74:  test('Sales Pipeline Card Interactions', async ({ page }) => {
tests/staff-patched.spec.ts:20:test('Sales Pipeline Card Interactions', async ({ page }) => {
tests/ui/buttons-audit.spec.ts:35:  test('Pipeline Page - Card Actions', async ({ page }) => {
test-enhanced-pipeline-cards.js:13:console.log('🎯 Testing Enhanced Pipeline Cards...\n');
test-enhanced-pipeline-cards.js:155:    console.log('✅ Enhanced Pipeline Cards Features Summary:');
install_pipeline_full.sh:59:export type CardDetail = {
install_pipeline_full.sh:68:export async function fetchCard(id:string):Promise<CardDetail|null>{
install_pipeline_full.sh:70:  for(const u of tries){ const r=await safeFetchJson<CardDetail>(u); if(r.ok && r.data?.id) return r.data; }
card_modal.sh:378:perl -0777 -i -pe 's/import React, \{([^}]*)\} from "react";/import React, {$1} from "react";\nimport CardDrawer from ".\/pipeline\/CardDrawer";/' client/src/pages/staff/sections/SalesPipeline.tsx || true
reports/pipeline_routes.txt:94:client/src/pipeline/PipelineCardDetail.tsx:31:  const { cardId } = useParams<{ cardId: string }>();
reports/pipeline_routes.txt:95:client/src/pipeline/PipelineCardDetail.tsx:44:      console.log('🔍 PipelineCardDetail: Loading card:', cardId);
reports/pipeline_routes.txt:96:client/src/pipeline/PipelineCardDetail.tsx:48:        const res = await api(`/api/pipeline/cards/${cardId}`);
reports/pipeline_routes.txt:97:client/src/pipeline/PipelineCardDetail.tsx:52:            id: res.id || cardId,
reports/pipeline_routes.txt:98:client/src/pipeline/PipelineCardDetail.tsx:84:        const appRes = await api(`/api/pipeline/cards/${cardId}/application`);
reports/pipeline_routes.txt:99:client/src/pipeline/PipelineCardDetail.tsx:89:            id: app.id || cardId,
reports/pipeline_routes.txt:100:client/src/pipeline/PipelineCardDetail.tsx:123:        const found = list.find((x: any) => x.id === cardId) || null;
reports/pipeline_routes.txt:101:client/src/pipeline/PipelineCardDetail.tsx:127:            id: found.id || cardId,
reports/pipeline_routes.txt:102:client/src/pipeline/PipelineCardDetail.tsx:163:  }, [cardId]);
reports/pipeline_routes.txt:103:client/src/pipeline/PipelineCardDetail.tsx:191:                onClick={() => navigate('/staff/pipeline')}
reports/pipeline_routes.txt:104:client/src/pipeline/PipelineCardDetail.tsx:215:            <p className="text-gray-600 mb-4">The application with ID "{cardId}" could not be found.</p>
reports/pipeline_routes.txt:105:client/src/pipeline/PipelineCardDetail.tsx:217:              onClick={() => navigate('/staff/pipeline')}
reports/pipeline_routes.txt:106:client/src/pipeline/PipelineCardDetail.tsx:266:              onClick={() => navigate('/staff/pipeline')}
client/src/pipeline/PipelinePage.tsx:10:import { PipelineCard, PipelineCardType } from './components/PipelineCard';
client/src/pipeline/PipelinePage.tsx:77:    return boardData.reduce((acc: Record<string, PipelineCardType>, card) => {
client/src/pipeline/PipelinePage.tsx:124:        // Convert to format expected by PipelineCard component
client/src/pipeline/PipelinePage.tsx:125:        const enrichedCards: (Card & PipelineCardType)[] = [];
client/src/pipeline/PipelinePage.tsx:132:              const enrichedCard: Card & PipelineCardType = {
client/src/pipeline/PipelinePage.tsx:140:                // Enhanced PipelineCardType fields for rich display
client/src/pipeline/PipelinePage.tsx:371:                {(cards || []).map((c: Card & PipelineCardType)=>{
client/src/pipeline/PipelinePage.tsx:379:                    <PipelineCard
client/src/pipeline/PipelineCardDetail.tsx:30:export function PipelineCardDetail() {
client/src/pipeline/PipelineCardDetail.tsx:44:      console.log('🔍 PipelineCardDetail: Loading card:', cardId);
client/src/pipeline/components/PipelineCard.tsx:3:export type PipelineCardType = {
client/src/pipeline/components/PipelineCard.tsx:36:export function PipelineCard({
client/src/pipeline/components/PipelineCard.tsx:41:  c: PipelineCardType;
client/src/pipeline/components/PipelineCard.tsx:42:  onOpen: (c: PipelineCardType) => void;
client/src/pipeline/components/PipelineCard.tsx:43:  onMove: (c: PipelineCardType, next: string) => void;
client/src/app/Shell.tsx:12:import { PipelineCardDetail } from "../pipeline/PipelineCardDetail";
server/db/pipeline-shim.ts:64:  async list(): Promise<Record<PipelineStage, ApplicationCard[]>> {
server/db/pipeline-shim.ts:65:    const by: Record<PipelineStage, ApplicationCard[]> = {
reports/fix-cards-users-2025-08-30_22-23-54/12_pipeline_refs.txt:235:server/db/pipeline-shim.ts:64:  async list(): Promise<Record<PipelineStage, ApplicationCard[]>> {
reports/fix-cards-users-2025-08-30_22-23-54/12_pipeline_refs.txt:236:server/db/pipeline-shim.ts:65:    const by: Record<PipelineStage, ApplicationCard[]> = {
reports/fix-cards-users-2025-08-30_22-23-54/12_pipeline_refs.txt:1614:server/routes/applications/create.ts:664:    console.log("🎯 [MONITOR] Sales Pipeline: Card added to 'New Application' stage");
reports/fix-cards-users-2025-08-30_22-23-41/12_pipeline_refs.txt:1757:server/db/pipeline-shim.ts:64:  async list(): Promise<Record<PipelineStage, ApplicationCard[]>> {
reports/fix-cards-users-2025-08-30_22-23-41/12_pipeline_refs.txt:1758:server/db/pipeline-shim.ts:65:    const by: Record<PipelineStage, ApplicationCard[]> = {
reports/fix-cards-users-2025-08-30_22-23-41/12_pipeline_refs.txt:1988:server/routes/applications/create.ts:664:    console.log("🎯 [MONITOR] Sales Pipeline: Card added to 'New Application' stage");
client/src/pages/staff/marketing/AttributionTab.tsx:277:          <CardTitle>Channel Performance Details</CardTitle>
server/routes/applications/create.ts:664:    console.log("🎯 [MONITOR] Sales Pipeline: Card added to 'New Application' stage");
